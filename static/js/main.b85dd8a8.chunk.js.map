{"version":3,"sources":["config.js","dir/HomePage.js","components/countdown/CountdownTime.js","functions/index.js","dir/CountdownPage.js","components/utils/AppRoutes.js","App.js","Root.js","components/utils/ScrollToTop.js","index.js"],"names":["routes","countdownOptions","s","timestamp","ms","mins","hrs","days","prefix","suffix","complete","HomePage","exact","to","Component","CountdownTime","props","q","renderer","hours","minutes","seconds","milliseconds","completed","options","setState","className","title","state","queries","queryStr","queryObj","spaceRegex","slice","queryArr","split","forEach","value","key","toLowerCase","length","replace","queryParse","location","search","parseInt","Date","getTime","console","log","this","date","withRouter","CountdownPage","AppRoutes","path","component","App","Root","basename","process","children","ScrollToTop","prevProps","pathname","window","scrollTo","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b85dd8a8.chunk.js","sourcesContent":["export const routes = {\r\n  home: `/`,\r\n  countdown: `/countdown`\r\n};\r\n\r\nexport const countdownOptions = {\r\n  s: 360, // Seconds for counting down to (TAKES PRIORITY)\r\n  timestamp: 0, // UNIX date timestamp to count down to\r\n  ms: false, // Boolean for displaying milliseconds\r\n  mins: true, // Boolean for displaying minutes\r\n  hrs: false, // Boolean for displaying hours\r\n  days: false, // Boolean for displaying days\r\n  prefix: 'in', // Message to display before countdown timer\r\n  suffix: '', // Message to display after countdown timer\r\n  complete: 'imminently...' // Message to display when countdown is finished\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { routes } from '../config.js';\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Stream Tools</h1>\r\n        <Link exact to={`${routes.countdown}`}>Countdown</Link>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\nimport Countdown from 'react-countdown';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { queryParse } from '../../functions';\r\nimport { countdownOptions } from '../../config.js';\r\n\r\nclass CountdownTime extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      complete: false // countdown completion status\r\n    }\r\n    this.options = countdownOptions;\r\n    this.queries = queryParse(props.location.search);\r\n    for (let q in this.queries) {\r\n      this.options = { ...this.options, [q]: this.queries[q] };\r\n    };\r\n    this.options.s = parseInt(this.options.s); // Type control\r\n    if (this.options.s) {\r\n      this.options.timestamp = (new Date().getTime() + (this.options.s * 1000));\r\n    } else {\r\n      this.options.timestamp = parseInt(this.options.timestamp); // Type control\r\n    };\r\n    console.log(this.options)\r\n  };\r\n  componentDidMount() {\r\n    if (!this.options.s && !this.options.timestamp) { this.setState({ complete: true })};\r\n  };\r\n  renderer = ({days, hours, minutes, seconds, milliseconds, completed}) => {\r\n    const { options } = this;\r\n    if (completed) {\r\n      this.setState({ complete: true });\r\n      return (\r\n        <div className='countdown-content'>\r\n          <div className='countdown-timer'>\r\n            <span className='timer-text'>{this.options.complete}</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className='countdown-timer'>\r\n          <p className='timer-text'>{options.prefix}&nbsp;</p>\r\n\r\n          <p className='timer-count'>\r\n          <span title='Days'>\r\n            {options.days\r\n              ? `${days < 10\r\n                ? `0${days}`\r\n                : days} : `\r\n              : ''}\r\n          </span>\r\n          <span title='Hours'>\r\n            {options.hrs\r\n              ? `${hours < 10\r\n                ? `0${hours}`\r\n                : hours} : `\r\n              : ''}\r\n          </span>\r\n          <span title='Minutes'>\r\n            {options.mins\r\n              ? `${minutes < 10\r\n                ? `0${minutes}`\r\n                : minutes} : `\r\n              : ''}\r\n          </span>\r\n          <span title='Seconds'>\r\n            {seconds < 10 ? `0${seconds}` : seconds}\r\n          </span>\r\n          <span title='Milliseconds'>\r\n            {options.ms\r\n              ? ` : ${milliseconds < 10\r\n                ? `0${milliseconds}`\r\n                : milliseconds}`\r\n              : ''}\r\n          </span>\r\n          </p>\r\n\r\n          <p className='timer-text'>&nbsp;{options.suffix}</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    if (this.state.complete) {\r\n      return (\r\n        <div className='countdown-content'>\r\n          <div className='countdown-timer'>\r\n            <span className='timer-text'>{this.options.complete}</span>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className='countdown-content'>\r\n          <Countdown date={this.options.timestamp} renderer={this.renderer} />\r\n        </div>\r\n      );\r\n    };\r\n  };\r\n};\r\n\r\nexport default withRouter(CountdownTime);\r\n","export const queryParse = (queryStr = '?') => {\r\n  let queryObj = {};\r\n  const spaceRegex = /(%20)|(\\+)/g;\r\n  if (queryStr.slice(1)) {\r\n    const queryArr = queryStr.slice(1).split('&');\r\n    queryArr.forEach(q => {\r\n      const key = q.split('=')[0].toLowerCase();\r\n      let value;\r\n      if (q.split('=').length === 1) {\r\n        value = true;\r\n      } else {\r\n        value = q.split('=')[1].replace(spaceRegex, ' ');\r\n      };\r\n      queryObj = { ...queryObj, [key]: value };\r\n    });\r\n  };\r\n  return queryObj;\r\n};\r\n\r\nexport const queryStringify = (queryObj = {}) => {\r\n  let queryStr = '';\r\n  if (Object.keys(queryObj).length) {\r\n    for (let q in queryObj) {\r\n      if (!queryStr) {\r\n        queryStr = `?${q}=${queryObj[q]}`;\r\n      } else {\r\n        queryStr = `${queryStr}&${q}=${queryObj[q]}`;\r\n      };\r\n    };\r\n  };\r\n  return queryStr;\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport CountdownTime from '../components/countdown/CountdownTime';\r\n\r\nclass CountdownPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className='countdown-container'>\r\n        <CountdownTime />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default CountdownPage;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport HomePage from '../../dir/HomePage';\r\nimport CountdownPage from '../../dir/CountdownPage';\r\nimport { routes } from '../../config.js';\r\n\r\nclass AppRoutes extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path={routes.home} exact component={HomePage} />\r\n        <Route path={routes.countdown} exact component={CountdownPage} />\r\n      </Switch>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AppRoutes;\r\n","import React from 'react';\n\nimport AppRoutes from './components/utils/AppRoutes';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRoutes />\n    </div>\n  );\n};\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nclass Root extends Component {\r\n  render () {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        {this.props.children}\r\n      </Router>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    };\r\n  };\r\n  render() {\r\n    return null;\r\n  };\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport Root from './Root';\nimport ScrollToTop from './components/utils/ScrollToTop';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root>\n      <ScrollToTop />\n      <App />\n    </Root>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}