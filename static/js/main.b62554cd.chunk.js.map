{"version":3,"sources":["config.js","dir/HomePage.js","components/countdown/CountdownTime.js","functions/index.js","dir/CountdownPage.js","components/utils/AppRoutes.js","App.js","Root.js","components/utils/ScrollToTop.js","index.js"],"names":["routes","countdownOptions","s","timestamp","ms","mins","hrs","days","prefix","suffix","complete","HomePage","exact","to","Component","CountdownTime","props","q","renderer","hours","minutes","seconds","milliseconds","options","title","setState","state","queries","queryStr","queryObj","spaceRegex","slice","queryArr","split","forEach","value","key","toLowerCase","length","replace","queryParse","location","search","parseInt","Date","getTime","console","log","this","date","withRouter","CountdownPage","AppRoutes","path","component","App","className","Root","basename","children","ScrollToTop","prevProps","pathname","window","scrollTo","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAEaA,EACN,IADMA,EAED,aAGCC,EAAmB,CAC9BC,EAAG,EACHC,UAAW,EACXC,IAAI,EACJC,MAAM,EACNC,KAAK,EACLC,MAAM,EACNC,OAAQ,GACRC,OAAQ,GACRC,SAAU,cCAGC,E,uKATX,OACE,6BACE,4CACA,kBAAC,IAAD,CAAMC,OAAK,EAACC,GAAE,UAAKb,EAAL,WAAd,kB,GALec,a,gCCEjBC,E,kDACJ,WAAYC,GAAQ,IAAD,EAOjB,IAAK,IAAIC,KAPQ,qBACjB,cAAMD,IAoBRE,SAAW,YAA8D,IAA5DX,EAA2D,EAA3DA,KAAMY,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,aAAcZ,EAAc,EAAdA,SAChDa,EAD8D,eAC9DA,QACR,IAAIb,EAGF,OACE,2BACE,8BAAOa,EAAQf,OAAf,QAEA,0BAAMgB,MAAM,QACTD,EAAQhB,KAAR,UACMA,EAAO,GAAP,WACGA,GACJA,EAHL,OAIG,IAEN,0BAAMiB,MAAM,SACTD,EAAQjB,IAAR,UACMa,EAAQ,GAAR,WACGA,GACJA,EAHL,OAIG,IAEN,0BAAMK,MAAM,WACTD,EAAQlB,KAAR,UACMe,EAAU,GAAV,WACGA,GACJA,EAHL,OAIG,IAEN,0BAAMI,MAAM,WACTH,EAAU,GAAV,WAAmBA,GAAYA,GAElC,0BAAMG,MAAM,gBACTD,EAAQnB,GAAR,aACSkB,EAAe,GAAf,WACAA,GACJA,GACF,IAGN,qCAAaC,EAAQd,SAtCzB,EAAKgB,SAAS,CAAEf,UAAU,KAtB5B,EAAKgB,MAAQ,CACXhB,UAAU,GAEZ,EAAKa,QAAUtB,EACf,EAAK0B,QCdiB,WAAqB,IAApBC,EAAmB,uDAAR,IAChCC,EAAW,GACTC,EAAa,cACnB,GAAIF,EAASG,MAAM,GAAI,CACrB,IAAMC,EAAWJ,EAASG,MAAM,GAAGE,MAAM,KACzCD,EAASE,SAAQ,SAAAjB,GACf,IACIkB,EADEC,EAAMnB,EAAEgB,MAAM,KAAK,GAAGI,cAG1BF,EAD0B,IAAxBlB,EAAEgB,MAAM,KAAKK,QAGPrB,EAAEgB,MAAM,KAAK,GAAGM,QAAQT,EAAY,KAE9CD,EAAQ,2BAAQA,GAAR,kBAAmBO,EAAMD,OAGrC,OAAON,EDFUW,CAAWxB,EAAMyB,SAASC,QAC3B,EAAKf,QACjB,EAAKJ,QAAL,2BAAoB,EAAKA,SAAzB,kBAAmCN,EAAI,EAAKU,QAAQV,KARrC,OAUjB,EAAKM,QAAQrB,EAAIyC,SAAS,EAAKpB,QAAQrB,GACnC,EAAKqB,QAAQrB,EACf,EAAKqB,QAAQpB,WAAa,IAAIyC,MAAOC,UAA8B,IAAjB,EAAKtB,QAAQrB,EAE/D,EAAKqB,QAAQpB,UAAYwC,SAAS,EAAKpB,QAAQpB,WAEjD2C,QAAQC,IAAI,EAAKxB,SAhBA,E,gEAmBZyB,KAAKzB,QAAQrB,GAAM8C,KAAKzB,QAAQpB,WAAa6C,KAAKvB,SAAS,CAAEf,UAAU,M,+BAiD5E,OAAIsC,KAAKtB,MAAMhB,SAEX,8BAAOsC,KAAKzB,QAAQb,UAIpB,kBAAC,IAAD,CAAWuC,KAAMD,KAAKzB,QAAQpB,UAAWe,SAAU8B,KAAK9B,e,GA3EpCJ,aAiFboC,cAAWnC,GEzEXoC,E,uKATX,OACE,6BACE,yCACA,kBAAC,EAAD,W,GALoBrC,aCcbsC,E,uKATX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAMrD,EAAaY,OAAK,EAAC0C,UAAW3C,IAC3C,kBAAC,IAAD,CAAO0C,KAAMrD,EAAkBY,OAAK,EAAC0C,UAAWH,S,GALhCrC,a,MCMTyC,MARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,QCOSC,E,uKARX,OACE,kBAAC,IAAD,CAAQC,SPRQ,iBOSbV,KAAKhC,MAAM2C,c,GAJD7C,aCFb8C,E,iLACeC,GACbb,KAAKhC,MAAMyB,SAASqB,WAAaD,EAAUpB,SAASqB,UACtDC,OAAOC,SAAS,EAAG,K,+BAIrB,OAAO,S,GAPeC,IAAMnD,WAWjBoC,cAAWU,G,MCN1BM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.b62554cd.chunk.js","sourcesContent":["export const baseRoute = `/stream-tools`;\r\n\r\nexport const routes = {\r\n  home: `/`,\r\n  countdown: `/countdown`\r\n};\r\n\r\nexport const countdownOptions = {\r\n  s: 0, // Seconds for counting down to (TAKES PRIORITY)\r\n  timestamp: 0, // UNIX date timestamp to count down to\r\n  ms: false, // Boolean for displaying milliseconds\r\n  mins: true, // Boolean for displaying minutes\r\n  hrs: false, // Boolean for displaying hours\r\n  days: false, // Boolean for displaying days\r\n  prefix: '', // Message to display before countdown timer\r\n  suffix: '', // Message to display after countdown timer\r\n  complete: 'Completed!' // Message to display when countdown is finished\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { routes } from '../config.js';\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Stream Tools</h1>\r\n        <Link exact to={`${routes.countdown}?s=300`}>Countdown</Link>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\nimport Countdown from 'react-countdown';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { queryParse } from '../../functions';\r\nimport { countdownOptions } from '../../config.js';\r\n\r\nclass CountdownTime extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      complete: false // countdown completion status\r\n    }\r\n    this.options = countdownOptions;\r\n    this.queries = queryParse(props.location.search);\r\n    for (let q in this.queries) {\r\n      this.options = { ...this.options, [q]: this.queries[q] };\r\n    };\r\n    this.options.s = parseInt(this.options.s); // Type control\r\n    if (this.options.s) {\r\n      this.options.timestamp = (new Date().getTime() + (this.options.s * 1000));\r\n    } else {\r\n      this.options.timestamp = parseInt(this.options.timestamp); // Type control\r\n    };\r\n    console.log(this.options)\r\n  };\r\n  componentDidMount() {\r\n    if (!this.options.s && !this.options.timestamp) { this.setState({ complete: true })};\r\n  };\r\n  renderer = ({days, hours, minutes, seconds, milliseconds, complete}) => {\r\n    const { options } = this;\r\n    if (complete) {\r\n      this.setState({ complete: true });\r\n    } else {\r\n      return (\r\n        <p>\r\n          <span>{options.prefix}&nbsp;</span>\r\n\r\n          <span title='Days'>\r\n            {options.days\r\n              ? `${days < 10\r\n                ? `0${days}`\r\n                : days} : `\r\n              : ''}\r\n          </span>\r\n          <span title='Hours'>\r\n            {options.hrs\r\n              ? `${hours < 10\r\n                ? `0${hours}`\r\n                : hours} : `\r\n              : ''}\r\n          </span>\r\n          <span title='Minutes'>\r\n            {options.mins\r\n              ? `${minutes < 10\r\n                ? `0${minutes}`\r\n                : minutes} : `\r\n              : ''}\r\n          </span>\r\n          <span title='Seconds'>\r\n            {seconds < 10 ? `0${seconds}` : seconds}\r\n          </span>\r\n          <span title='Milliseconds'>\r\n            {options.ms\r\n              ? ` : ${milliseconds < 10\r\n                ? `0${milliseconds}`\r\n                : milliseconds}`\r\n              : ''}\r\n          </span>\r\n\r\n          <span>&nbsp;{options.suffix}</span>\r\n        </p>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    if (this.state.complete) {\r\n      return (\r\n        <span>{this.options.complete}</span>\r\n      );\r\n    } else {\r\n      return (\r\n        <Countdown date={this.options.timestamp} renderer={this.renderer} />\r\n      );\r\n    };\r\n  };\r\n};\r\n\r\nexport default withRouter(CountdownTime);\r\n","export const queryParse = (queryStr = '?') => {\r\n  let queryObj = {};\r\n  const spaceRegex = /(%20)|(\\+)/g;\r\n  if (queryStr.slice(1)) {\r\n    const queryArr = queryStr.slice(1).split('&');\r\n    queryArr.forEach(q => {\r\n      const key = q.split('=')[0].toLowerCase();\r\n      let value;\r\n      if (q.split('=').length === 1) {\r\n        value = true;\r\n      } else {\r\n        value = q.split('=')[1].replace(spaceRegex, ' ');\r\n      };\r\n      queryObj = { ...queryObj, [key]: value };\r\n    });\r\n  };\r\n  return queryObj;\r\n};\r\n\r\nexport const queryStringify = (queryObj = {}) => {\r\n  let queryStr = '';\r\n  if (Object.keys(queryObj).length) {\r\n    for (let q in queryObj) {\r\n      if (!queryStr) {\r\n        queryStr = `?${q}=${queryObj[q]}`;\r\n      } else {\r\n        queryStr = `${queryStr}&${q}=${queryObj[q]}`;\r\n      };\r\n    };\r\n  };\r\n  return queryStr;\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport CountdownTime from '../components/countdown/CountdownTime';\r\n\r\nclass CountdownPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Countdown</h1>\r\n        <CountdownTime />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default CountdownPage;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport HomePage from '../../dir/HomePage';\r\nimport CountdownPage from '../../dir/CountdownPage';\r\nimport { routes } from '../../config.js';\r\n\r\nclass AppRoutes extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path={routes.home} exact component={HomePage} />\r\n        <Route path={routes.countdown} exact component={CountdownPage} />\r\n      </Switch>\r\n    );\r\n  };\r\n};\r\n\r\nexport default AppRoutes;\r\n","import React from 'react';\n\nimport AppRoutes from './components/utils/AppRoutes';\nimport './styles/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRoutes />\n    </div>\n  );\n};\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport { baseRoute } from './config.js';\r\n\r\nclass Root extends Component {\r\n  render () {\r\n    return (\r\n      <Router basename={baseRoute}>\r\n        {this.props.children}\r\n      </Router>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n    };\r\n  };\r\n  render() {\r\n    return null;\r\n  };\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport Root from './Root';\nimport ScrollToTop from './components/utils/ScrollToTop';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root>\n      <ScrollToTop />\n      <App />\n    </Root>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}